cmake_minimum_required(VERSION 3.3)
cmake_policy(SET CMP0063 NEW)

project(JSMN)

set(JSMN_VERSION_MAJOR 2)
set(JSMN_VERSION_MINOR 0)
set(JSMN_VERSION_PATCH 0)

if(${PROJECT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR})

set(CMAKE_C_FLAGS   "${CMAKE_C99_STANDARD_COMPILE_OPTION}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX11_STANDARD_COMPILE_OPTION}")

if(!WIN32)
	set(CMAKE_C_FLAGS_DEBUG   "${CMAKE_C_FLAGS_DEBUG} -pg -Wall")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg -Wall")
endif(!WIN32)

# Add options to GCC Compiler
if(${CMAKE_C_COMPILER_ID} MATCHES "GNU" AND ${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")
	set(CMAKE_C_FLAGS   "${CMAKE_C_FLAGS} -flto -ffat-lto-objects")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -flto -ffat-lto-objects")
	set(CMAKE_C_FLAGS_DEBUG   "${CMAKE_C_FLAGS_DEBUG} --coverage")
	set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} --coverage")
endif(${CMAKE_C_COMPILER_ID} MATCHES "GNU" AND ${CMAKE_CXX_COMPILER_ID} MATCHES "GNU")

endif(${PROJECT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR})

set(CMAKE_C_VISIBILITY_PRESET hidden)
set(CMAKE_CXX_VISIBILITY_PRESET hidden)
set(CMAKE_VISIBILITY_INLINES_HIDDEN YES)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if(${PROJECT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR})
	add_subdirectory(example)
	add_subdirectory(test)
	add_subdirectory(tests)
endif(${PROJECT_SOURCE_DIR} STREQUAL ${CMAKE_SOURCE_DIR})

add_library(jsmn_obj OBJECT
	json.c
)
set_target_properties(jsmn_obj PROPERTIES POSITION_INDEPENDENT_CODE ON)
# target_compile_definitions(jsmn_obj PRIVATE JSMN_DEFINES JSMN_PARENT_LINKS JSMN_NEXT_SIBLING JSMN_SHORT_TOKENS)

add_library(jsmn
	$<TARGET_OBJECTS:jsmn_obj>
)
target_include_directories(jsmn
	PUBLIC ${PROJECT_SOURCE_DIR}
)

set_target_properties(jsmn
                      PROPERTIES
                      VERSION ${JSMN_VERSION_MAJOR}.${JSMN_VERSION_MINOR}.${JSMN_VERSION_PATCH}
                      SOVERSION ${JSMN_VERSION_MAJOR}.${JSMN_VERSION_MINOR}.${JSMN_VERSION_PATCH}
)
